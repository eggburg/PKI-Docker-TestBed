
To create the network

    cf@cf-VirtualBox:~/tls-testbed/certs$ docker network create --subnet=172.18.0.0/16 mynet

================================

OCSP responder container

To build docker image
    cf@cf-VirtualBox:~/tls-testbed/certs$ docker build -t my_ocsp_responder_image -f Dockerfile_ocsp .

To run the container
    cf@cf-VirtualBox:~/tls-testbed/certs$ docker run -it --rm --net mynet --ip 172.18.0.88 -p 8888:8888 --name ocsp_responder_container my_ocsp_responder_image

To get into the running container
    cf@cf-VirtualBox:~/tls-testbed/certs$ docker exec -it ocsp_responder_container bash

=================================
TLS server container

To build docker image
    cf@cf-VirtualBox:~/tls-testbed/certs$ docker build -t my_tls_server_good_certimage -f Dockerfile_tls_server .

To run the container
    cf@cf-VirtualBox:~/tls-testbed/certs$ docker run -it --rm --net mynet --ip 172.18.0.55 -p 12345:12345 --name my_tls_server_good_certcontainer --add-host ocsp.pki.eggburger:172.18.0.88 my_tls_server_good_certimage

=================================
To connect the TLS server from TLS client and request OCSP stapling from the HOST
    $ openssl s_client -connect 0.0.0.0:12345 -CAfile root_intermediate.crt -status
    $ openssl s_client -connect 0.0.0.0:54321 -CAfile root_intermediate.crt -status

To fetch the CRL from CRL distribution point from the HOST (connect to port 9999)

    cf@cf-VirtualBox:~$ curl http://0.0.0.0:9999/myCrlFile.pem
    -----BEGIN X509 CRL-----
    MIIBxTCBrgIBATANBgkqhkiG9w0BAQsFADA6MQswCQYDVQQGEwJVUzERMA8GA1UE
    BwwIU2FuIEpvc2UxGDAWBgNVBAMMD2ludGVybWVkaWF0ZV9jbhcNMjEwMzAzMDgw
    MDU2WhcNMzEwMzAxMDgwMDU2WjAwMBYCBQCIiIiIFw0xNzA4MTMwNTIwMDJaMBYC
    BQCqqqqqFw0xOTA2MTQwNDIyNDlaoA4wDDAKBgNVHRQEAwIBAjANBgkqhkiG9w0B
    AQsFAAOCAQEAfdoazlY4J097dD9BgLKR99iupyRiYyGYSMhq92tkTXLerZ9EtvUD
    DzKEQ4sHf9W5axZjU/l7/nAzTaf5MOwf08pwrbuUWrqFO6hQ3AqBN1aZpkbX36+v
    SusYIIrCYDmRPykcPaIjnIYvNOcnhaOL8X+tBD4RaeOZn6u1gdsaPEbZMPFzyLRC
    J8HW5Bnfc6/3JlFxOSutRZDNOAv3cleJ3g+CIiVLcvxKdGUqPyREFCL/YFBhFXLX
    UKoTmb22HrxRdOlO0I+1aTaclHb/G1Y1JY8Xviiy5KD5XZSzVXBCW1Ban3w6JfVt
    BxhSazDK+KWUAeABHPkG/UzchSdkYFJSuA==
    -----END X509 CRL-----





To connect the tls server from the tls client container

    cf@cf-VirtualBox:~/tls-testbed/certs$ docker exec -it tls_client_container bash
    
    bash-5.1# openssl s_client -connect tls.server.good:12345 -CAfile certs/root_intermediate.crt -status
    bash-5.1# openssl s_client -connect 172.18.0.55:12345 -CAfile certs/root_intermediate.crt -status

    bash-5.1# openssl s_client -connect tls.server.revoked:54321 -CAfile certs/root_intermediate.crt -status
    bash-5.1# openssl s_client -connect 172.18.0.44:54321 -CAfile certs/root_intermediate.crt -status


To fetch the CRL from CRL distribution point from the tls client container (connect to port 80)

    bash-5.1# curl http://crl.pki.eggburger:80/myCrlFile.pem
    -----BEGIN X509 CRL-----
    MIIBxTCBrgIBATANBgkqhkiG9w0BAQsFADA6MQswCQYDVQQGEwJVUzERMA8GA1UE
    BwwIU2FuIEpvc2UxGDAWBgNVBAMMD2ludGVybWVkaWF0ZV9jbhcNMjEwMzAzMDgw
    MDU2WhcNMzEwMzAxMDgwMDU2WjAwMBYCBQCIiIiIFw0xNzA4MTMwNTIwMDJaMBYC
    BQCqqqqqFw0xOTA2MTQwNDIyNDlaoA4wDDAKBgNVHRQEAwIBAjANBgkqhkiG9w0B
    AQsFAAOCAQEAfdoazlY4J097dD9BgLKR99iupyRiYyGYSMhq92tkTXLerZ9EtvUD
    DzKEQ4sHf9W5axZjU/l7/nAzTaf5MOwf08pwrbuUWrqFO6hQ3AqBN1aZpkbX36+v
    SusYIIrCYDmRPykcPaIjnIYvNOcnhaOL8X+tBD4RaeOZn6u1gdsaPEbZMPFzyLRC
    J8HW5Bnfc6/3JlFxOSutRZDNOAv3cleJ3g+CIiVLcvxKdGUqPyREFCL/YFBhFXLX
    UKoTmb22HrxRdOlO0I+1aTaclHb/G1Y1JY8Xviiy5KD5XZSzVXBCW1Ban3w6JfVt
    BxhSazDK+KWUAeABHPkG/UzchSdkYFJSuA==
    -----END X509 CRL-----


    cf@cf-VirtualBox:~$ docker exec -it tls_client_container bash
    bash-5.1# curl http://172.18.0.99:80/myCrlFile.pem
    -----BEGIN X509 CRL-----
    MIIBxTCBrgIBATANBgkqhkiG9w0BAQsFADA6MQswCQYDVQQGEwJVUzERMA8GA1UE
    BwwIU2FuIEpvc2UxGDAWBgNVBAMMD2ludGVybWVkaWF0ZV9jbhcNMjEwMzAzMDgw
    MDU2WhcNMzEwMzAxMDgwMDU2WjAwMBYCBQCIiIiIFw0xNzA4MTMwNTIwMDJaMBYC
    BQCqqqqqFw0xOTA2MTQwNDIyNDlaoA4wDDAKBgNVHRQEAwIBAjANBgkqhkiG9w0B
    AQsFAAOCAQEAfdoazlY4J097dD9BgLKR99iupyRiYyGYSMhq92tkTXLerZ9EtvUD
    DzKEQ4sHf9W5axZjU/l7/nAzTaf5MOwf08pwrbuUWrqFO6hQ3AqBN1aZpkbX36+v
    SusYIIrCYDmRPykcPaIjnIYvNOcnhaOL8X+tBD4RaeOZn6u1gdsaPEbZMPFzyLRC
    J8HW5Bnfc6/3JlFxOSutRZDNOAv3cleJ3g+CIiVLcvxKdGUqPyREFCL/YFBhFXLX
    UKoTmb22HrxRdOlO0I+1aTaclHb/G1Y1JY8Xviiy5KD5XZSzVXBCW1Ban3w6JfVt
    BxhSazDK+KWUAeABHPkG/UzchSdkYFJSuA==
    -----END X509 CRL-----




// Fetch CRL
# curl -s http://crl.pki.eggburger/myCrlFile.pem > crl.pem
# cat certs/root_intermediate.crt crl.pem > crl_chain.pem


// Fetch good server cert and verify it against the CRL

# openssl s_client -showcerts -connect tls.server.good:12345 2>/dev/null </dev/null | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' > good_server_certs
# openssl verify -crl_check -CAfile crl_chain.pem good_server_certs
good_server_certs: OK


// Fetch revoked server cert and verify it against the CRL

# openssl s_client -showcerts -connect tls.server.revoked:54321 2>/dev/null </dev/null | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' > revoked_server_certs
# openssl verify -crl_check -CAfile crl_chain.pem revoked_server_certs 
C = US, L = San Jose, CN = leaf_revoked_cn
error 23 at 0 depth lookup: certificate revoked
error server_cert: verification failed